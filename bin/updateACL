#!/usr/bin/env node
// -*- mode: javascript -*-

const path = require('path'),
      propertiesParser = require('properties-parser'),
      config = propertiesParser.read(path.join(__dirname, '..', 'conf', 'config.sh'))

const expandHomeDir = require('expand-home-dir'),
      wskprops = process.env.WSK_AUTH || propertiesParser.read(process.env.WSK_CONFIG_FILE || expandHomeDir('~/.wskprops')),
      owProps = {
	  apihost: process.env.WSK_APIHOST || wskprops.APIHOST || 'openwhisk.ng.bluemix.net',
	  api_key: process.env.WSK_AUTH || wskprops.AUTH,
	  namespace: process.env.WSK_NAMESPACE || wskprops.NAMESPACE || '_',
	  ignore_certs: process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0'
      },
      ow = require('openwhisk')(owProps)

OPERATION=process.argv[2]
PROVIDER=process.argv[3]
USER=process.argv[4]

const usage = () => console.log('updateACL <add|remove> [PROVIDER] [USER]')
const _getACL = package => {
    let aclParam = package.parameters.find(param => param.key === 'acl')
    if (!aclParam) {
	aclParam = { key: "acl", value: {} }
	package.parameters.push(aclParam)
    }
    if (!aclParam.value) {
	aclParam.value = {}
    }
    return aclParam
}
const getACL = package => _getACL(package).value

if (!OPERATION || (OPERATION != "set" && OPERATION !== "list" && (!PROVIDER || !USER))) {
    usage()
    process.exit(1)

} else {
    const addToACL = package => {
	getACL(package)[`${PROVIDER}:${USER}`] = true
	return ow.packages.update( { packageName: package.name,
				     package: package
				   })
	    .then(getACL)
    }
    const removeFromACL = package => {
	delete getACL(package)[`${PROVIDER}:${USER}`]
	return ow.packages.update( { packageName: package.name,
				     package: package
				   })
	    .then(getACL)
    }
    const setACL = package => {
	const aclFile = path.join(__dirname, '..', process.argv[3])
	const theACL = require(aclFile)
	_getACL(package).value = theACL

	return ow.packages.update( { packageName: package.name,
				     package: package
				   })
	    .then(getACL)
    }
    
    const doUpdate =
	  OPERATION === "add" || OPERATION == "a" ? addToACL
	  : OPERATION === "delete" || OPERATION === "d" || OPERATION === "remove" || OPERATION === "r" ? removeFromACL
	  : OPERATION === "set" || OPERATION === "s" ? setACL
	  : getACL // list it, unmodified
    
    ow.packages.get( { packageName: config.PACKAGE })
	.then(doUpdate)
	.then(acl => { console.log('ok'); console.log(acl) })
	.catch(err => console.error(err))
}
